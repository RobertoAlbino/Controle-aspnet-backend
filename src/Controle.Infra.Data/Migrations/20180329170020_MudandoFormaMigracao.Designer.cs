// <auto-generated />
using Controle.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Controle.Infra.Data.Migrations
{
    [DbContext(typeof(ControleContext))]
    [Migration("20180329170020_MudandoFormaMigracao")]
    partial class MudandoFormaMigracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Controle.Domain.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdEstado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("Controle.Domain.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdEndereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("IdEndereco");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Controle.Domain.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<int>("IdCidade");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Controle.Domain.Models.Equipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdTipoEquipamento");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoEquipamento");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("Controle.Domain.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdPais");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Controle.Domain.Models.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Atendida");

                    b.Property<int>("IdCliente");

                    b.Property<int>("IdEquipamento");

                    b.Property<string>("Problema")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEquipamento");

                    b.ToTable("OrdemServico");
                });

            modelBuilder.Entity("Controle.Domain.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Controle.Domain.Models.TipoEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("TipoEquipamento");
                });

            modelBuilder.Entity("Controle.Domain.Models.Cidade", b =>
                {
                    b.HasOne("Controle.Domain.Models.Estado", "Estado")
                        .WithMany("Cidade")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Controle.Domain.Models.Cliente", b =>
                {
                    b.HasOne("Controle.Domain.Models.Endereco", "Endereco")
                        .WithMany("Cliente")
                        .HasForeignKey("IdEndereco")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Controle.Domain.Models.Endereco", b =>
                {
                    b.HasOne("Controle.Domain.Models.Cidade", "Cidade")
                        .WithMany("Endereco")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Controle.Domain.Models.Equipamento", b =>
                {
                    b.HasOne("Controle.Domain.Models.TipoEquipamento", "TipoEquipamento")
                        .WithMany("Equipamento")
                        .HasForeignKey("IdTipoEquipamento")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Controle.Domain.Models.Estado", b =>
                {
                    b.HasOne("Controle.Domain.Models.Pais", "Pais")
                        .WithMany("Estado")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Controle.Domain.Models.OrdemServico", b =>
                {
                    b.HasOne("Controle.Domain.Models.Cliente", "Cliente")
                        .WithMany("OrdemServico")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Controle.Domain.Models.Equipamento", "Equipamento")
                        .WithMany("OrdemServico")
                        .HasForeignKey("IdEquipamento")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
